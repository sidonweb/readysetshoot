import { useState } from "react";
import { Menu, X } from "lucide-react";

type NavItem = "Home" | "About" | "Services" | "FAQs" | "Contact" | "Get App";


const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false);

  const navItems: NavItem[] = ["Home", "About", "Services", "FAQs", "Contact", "Get App"];


  return (
    <nav className="sticky top-0 z-50 backdrop-blur-xs bg-black/40 text-white px-6 py-8">
      <div className="md:max-w-10/12 mx-auto flex justify-between items-center">
        <h1 className="text-xl font-bold syne"> <span className="flex flex-row gap-3 justify-center items-center">
          <svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M31.3346 23.0995C32.1503 21.1868 32.5735 19.122 32.5735 17C32.5735 12.8407 30.9537 8.92955 28.0126 5.98849C25.0716 3.04744 21.1605 1.42763 17.0011 1.42763C14.8791 1.42763 12.8143 1.85088 10.9005 2.66651C13.2856 0.986071 16.1958 0 19.3359 0C27.4361 0 34.0023 6.56618 34.0023 14.6664C34.0023 17.8065 33.0151 20.7143 31.3358 23.1006L31.3346 23.0995Z" fill="#FFD700" />
            <path d="M29.0079 25.4216C29.8155 23.5216 30.2388 21.4602 30.2388 19.3336C30.2388 15.1743 28.6189 11.2632 25.6779 8.32212C22.7368 5.38106 18.8257 3.76125 14.6664 3.76125C12.5398 3.76125 10.4773 4.18451 8.57722 4.99213C10.9612 3.31626 13.8656 2.33248 17.0012 2.33248C25.1013 2.33248 31.6675 8.89866 31.6675 16.9989C31.6675 20.1332 30.6849 23.0377 29.0079 25.4216Z" fill="#FF6B2C" />
            <path d="M14.6664 4.66725C6.56618 4.66725 0 11.2334 0 19.3336C0 27.4338 6.56618 34 14.6664 34C22.7666 34 29.3328 27.4338 29.3328 19.3336C29.3328 11.2334 22.7666 4.66725 14.6664 4.66725ZM14.6664 27.7541C10.0151 27.7541 6.24588 23.9849 6.24588 19.3336C6.24588 14.6824 10.0151 10.9131 14.6664 10.9131C19.3176 10.9131 23.0869 14.6835 23.0869 19.3336C23.0869 23.9837 19.3165 27.7541 14.6664 27.7541Z" fill="white" />
            <path d="M19.4823 19.0488C19.4366 19.5247 19.3359 19.941 19.17 20.3529C18.9298 20.9454 18.6015 21.4407 18.1531 21.8903C17.7893 22.2529 17.4393 22.5046 16.9943 22.7208C16.4429 22.9885 15.8503 23.1235 15.2406 23.1235C15.0358 23.1235 14.8288 23.1086 14.6206 23.0777C13.9937 22.9851 13.3966 22.7277 12.9173 22.3445C12.6164 22.1019 12.3419 21.7805 12.1531 21.4465C11.9541 21.0953 11.8145 20.6732 11.7642 20.2671C11.723 19.9399 11.7242 19.6482 11.7676 19.384C11.9106 18.526 12.4906 17.755 13.2307 17.4381C13.511 17.3192 13.7798 17.2642 14.0932 17.2642C14.1173 17.2642 14.1413 17.2642 14.1665 17.2654C14.4479 17.2734 14.6847 17.3146 14.9066 17.3958C15.4202 17.5823 15.7851 17.9495 15.951 18.4494C16.0036 18.6072 16.0322 18.7617 16.0437 18.9527L16.0482 19.0465L16.0757 19.0408C16.2358 19.0099 16.3571 18.7777 16.3857 18.4471C16.4212 18.041 16.2278 17.5868 15.8583 17.207C15.4511 16.7895 14.9009 16.5161 14.2797 16.4246C14.1859 16.4109 14.1436 16.4074 13.9686 16.4074H13.9148C13.6483 16.4074 13.5842 16.4132 13.3691 16.4532C13.2364 16.4772 13.1186 16.507 12.9825 16.5504C12.4357 16.7254 11.9518 17.0252 11.5251 17.4518C11.0916 17.8854 10.7724 18.4025 10.5756 18.9893C10.4281 19.4274 10.3663 19.8003 10.3583 20.2877C10.3526 20.6674 10.3743 20.9191 10.443 21.2749C10.61 22.126 11.0355 23.0137 11.6384 23.7686C11.6509 23.7858 11.6578 23.7938 11.6578 23.7961C11.6567 23.7961 11.6521 23.7915 11.6429 23.7847C11.54 23.7069 11.2174 23.3877 11.0756 23.2253C10.4212 22.4771 10.0163 21.6078 9.88472 20.6709C9.84926 20.4101 9.8401 20.2774 9.8401 19.9765C9.8401 19.6757 9.84811 19.5761 9.88128 19.3428C10.0025 18.5031 10.3675 17.7001 10.928 17.0366C11.0287 16.9188 11.3043 16.6408 11.4244 16.539C11.8488 16.1752 12.3339 15.9018 12.8544 15.7325C13.2536 15.6032 13.6746 15.5392 14.0932 15.5392C14.7144 15.5392 15.3287 15.6799 15.856 15.9544C16.3651 16.2198 16.7758 16.5893 17.0755 17.0503C17.4187 17.5777 17.5937 18.1828 17.5948 18.8486C17.596 19.1529 17.5548 19.4045 17.4576 19.6894C17.1521 20.5828 16.4429 21.2291 15.6112 21.3675C15.4831 21.3893 15.3516 21.4007 15.22 21.4007C14.8254 21.4007 14.4318 21.3046 14.1218 21.1273C13.9571 21.0335 13.7707 20.8734 13.6597 20.7326C13.4321 20.4455 13.3108 20.1103 13.2879 19.71L13.2822 19.6162L13.2559 19.6219C13.0946 19.6516 12.9711 19.8884 12.9447 20.219C12.875 21.0667 13.7604 21.9807 14.8665 22.2049C15.0473 22.2415 15.2315 22.2598 15.4179 22.2598C16.1718 22.2598 16.9485 21.9612 17.5937 21.4099C17.7047 21.3138 17.9094 21.1101 18.0044 20.9992C18.5157 20.4009 18.8337 19.6757 18.9401 18.868C18.9881 18.5134 18.9859 18.057 18.9367 17.6864C18.8085 16.7289 18.3818 15.7668 17.6978 14.9009C17.684 14.8826 17.6749 14.8711 17.6783 14.8711C17.6818 14.8711 17.7149 14.8997 17.7939 14.9707C17.9151 15.0793 18.1542 15.3196 18.2583 15.4408C18.979 16.2702 19.3782 17.1933 19.4789 18.2675C19.4938 18.4402 19.4961 18.9001 19.4823 19.0488Z" fill="white" />
          </svg>
          <span className="hidden md:flex">ReadySetShoot</span>
        </span>


        </h1>

        {/* Desktop Nav */}
        <ul className="hidden md:flex justify-center items-center space-x-6 text-sm font-light">
          {navItems.map((item) => {
            let href = "#";

            if (item === "FAQs") {
              href = "#faqs";
            } else if (item === "Get App") {
              href = "#getapp"; // or an external link like "https://play.google.com"
            } else {
              href = `#${item.replace(/\s+/g, "").toLowerCase()}`;
            }

            return (
              <li
                key={item}
                className={
                  item === "Get App"
                    ? "cursor-pointer bg-[#5A00FF] hover:bg-[#3E00AF] rounded-full text-[#F1F1F1] hover:text-white transition-all duration-300 px-4 py-2"
                    : "cursor-pointer text-[#CACACA] hover:text-white transition-all duration-300"
                }
              >
                <a href={href}>{item}</a>
              </li>
            );
          })}
        </ul>


        {/* Mobile Icon */}
        <button className="md:hidden" onClick={() => setIsOpen(!isOpen)}>
          {isOpen ? <X size={24} /> : <Menu size={24} />}
        </button>
      </div>

      {/* Mobile Menu */}
      {isOpen && (
        <div className="md:hidden mt-4">
          <ul className="flex flex-col space-y-4 text-lg font-extralight">
            {navItems.map((item) => (
              <li key={item} className="cursor-pointer hover:text-indigo-300 transition-all duration-200">
                <a href={`#${item === 'FAQs' ? 'faqs' : item.replace(/\s+/g, '').toLowerCase()}`} onClick={() => setIsOpen(false)}>
                  {item}
                </a>
              </li>
            ))}
          </ul>
        </div>
      )}
    </nav>
  );
};

export default Navbar;
